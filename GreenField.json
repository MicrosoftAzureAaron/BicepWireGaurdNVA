{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "1744488875082117637"
    }
  },
  "parameters": {
    "vnetName": {
      "type": "string",
      "defaultValue": "WGNVA-Vet",
      "metadata": {
        "description": "Name of the Virtual Network"
      }
    },
    "vnetAddressSpace": {
      "type": "string",
      "defaultValue": "100.127.0.0/24",
      "metadata": {
        "description": "Azure Address space for the Virtual Network"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "WGNVA",
      "metadata": {
        "description": "Subnet name"
      }
    },
    "subnetAddressPrefix": {
      "type": "string",
      "defaultValue": "100.127.0.0/24",
      "metadata": {
        "description": "Subnet address prefix"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "WireGuardNVAKeyVault",
      "metadata": {
        "description": "Name of the existing Key Vault"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin username for the Virtual Machine"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the Virtual Machine"
      }
    },
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_F2as_v6",
      "metadata": {
        "description": "Select the VM SKU"
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "WireGuardNVA",
      "metadata": {
        "description": "Name of the Virtual Machine"
      }
    },
    "remoteRouter": {
      "type": "string",
      "defaultValue": "IP:PORT or FQDN:PORT",
      "metadata": {
        "description": "Remote router IP address"
      }
    },
    "remoteserverpublickey": {
      "type": "securestring",
      "defaultValue": "Home Routers Public Key",
      "metadata": {
        "description": "Remote public key"
      }
    },
    "remotenetwork": {
      "type": "string",
      "defaultValue": "192.168.1.0/24",
      "metadata": {
        "description": "Remote network address prefix"
      }
    },
    "nvainterfaceip": {
      "type": "string",
      "defaultValue": "192.168.2.7/32",
      "metadata": {
        "description": "NVA interface IP address (client IP in the Unifi router)"
      }
    },
    "nvaprivatekey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "NVA private key"
      }
    },
    "nvapublickey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "NVA public key"
      }
    }
  },
  "variables": {
    "adminPasswordSecretName": "[format('{0}-adminPassword', parameters('vmName'))]",
    "ubuntuImage": {
      "publisher": "canonical",
      "offer": "0001-com-ubuntu-server-focal",
      "sku": "20_04-lts-gen2",
      "version": "latest"
    }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), variables('adminPasswordSecretName'))]",
      "properties": {
        "value": "[parameters('adminPassword')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'remoterouter')]",
      "properties": {
        "value": "[parameters('remoteRouter')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'remoteserverpublickey')]",
      "properties": {
        "value": "[parameters('remoteserverpublickey')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'remotenetwork')]",
      "properties": {
        "value": "[parameters('remotenetwork')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'nvainterfaceIp')]",
      "properties": {
        "value": "[parameters('nvainterfaceip')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('nvaprivatekey')))]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'nvaprivatekey')]",
      "properties": {
        "value": "[parameters('nvaprivatekey')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('nvapublickey')))]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'nvapublickey')]",
      "properties": {
        "value": "[parameters('nvapublickey')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-02-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enableSoftDelete": true,
        "enablePurgeProtection": true,
        "enableRbacAuthorization": true,
        "publicNetworkAccess": "Disabled",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        },
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": false
      }
    },
    {
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2020-05-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
      "name": "[format('{0}-delete-lock', parameters('keyVaultName'))]",
      "properties": {
        "level": "CanNotDelete",
        "notes": "Prevents accidental deletion of the Key Vault."
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "privatelink.vaultcore.azure.net",
      "location": "global"
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', 'privatelink.vaultcore.azure.net', format('{0}-link', 'privatelink.vaultcore.azure.net'))]",
      "location": "global",
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        },
        "registrationEnabled": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.vaultcore.azure.net')]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2023-02-01",
      "name": "kv-private-endpoint",
      "location": "[resourceGroup().location]",
      "properties": {
        "subnet": {
          "id": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), parameters('subnetName'))]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "kv-private-link",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
              "groupIds": [
                "vault"
              ]
            }
          }
        ],
        "ipConfigurations": [
          {
            "name": "kvPrivateEndpointIPConfig",
            "properties": {
              "privateIPAddress": "100.127.0.254",
              "groupId": "vault",
              "memberName": "default"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}/{1}', 'kv-private-endpoint', 'default')]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "keyVaultDnsConfig",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.vaultcore.azure.net')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.vaultcore.azure.net')]",
        "[resourceId('Microsoft.Network/privateEndpoints', 'kv-private-endpoint')]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'nvapublicip')]",
      "properties": {
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicIP', parameters('vmName'))), '2023-02-01').ipAddress]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicIP', parameters('vmName')))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "WireGaurdNVAMI",
      "location": "[resourceGroup().location]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[guid(resourceGroup().id, 'WireGaurdNVAMI', 'Reader')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'WireGaurdNVAMI'), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'WireGaurdNVAMI')]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), 'WireGaurdNVAMI', 'SecretContributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b86a8fe4-44ce-4948-aee5-eccb2c155cd7')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'WireGaurdNVAMI'), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'WireGaurdNVAMI')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-02-01",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetAddressPrefix')]",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.KeyVault"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}-nic', parameters('vmName'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2023-02-01').subnets[0].id]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicIP', parameters('vmName')))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicIP', parameters('vmName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'WireGaurdNVAMI'))]": {}
        }
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSku')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('ubuntuImage')]",
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": null
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', 'privatelink.vaultcore.azure.net', format('{0}-link', 'privatelink.vaultcore.azure.net'))]",
        "[resourceId('Microsoft.Network/privateEndpoints', 'kv-private-endpoint')]",
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'WireGaurdNVAMI')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2023-03-01",
      "name": "[format('{0}/{1}', parameters('vmName'), 'customScript')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/MicrosoftAzureAaron/BicepWireGaurdNVA/main/firstboot.sh"
          ],
          "commandToExecute": "sudo bash firstboot.sh"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2023-02-01",
      "name": "WGRouteTable",
      "location": "[resourceGroup().location]",
      "properties": {
        "routes": [
          {
            "name": "HomeLANRoute",
            "properties": {
              "addressPrefix": "192.168.1.0/24",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName'))), '2023-02-01').ipConfigurations[0].properties.privateIPAddress]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}/{1}', parameters('vnetName'), parameters('subnetName'))]",
      "properties": {
        "addressPrefix": "[parameters('subnetAddressPrefix')]",
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', 'WGRouteTable')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', 'WGRouteTable')]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-02-01",
      "name": "[format('{0}-publicIP', parameters('vmName'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    }
  ]
}